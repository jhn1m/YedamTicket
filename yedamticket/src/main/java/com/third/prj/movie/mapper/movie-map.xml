<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.third.prj.movie.mapper.MovieMapper">

	<resultMap type="com.third.prj.movie.service.MovieVO"
		id="movieResultMap">
		<id property="mvNo" column="mv_no" />
		<result property="name" column="name" />
		<result property="genre" column="genre" />
		<result property="startDate" column="startDate" />
		<result property="director" column="director" />
		<result property="rating" column="rating" />
		<result property="distributor" column="distributor" />
		<result property="country" column="country" />
		<result property="runtime" column="runtime" />
		<result property="content" column="content" />
		<result property="CId" column="C_ID" />
		<result property="actor" column="actor" />
		<result property="fileCd" column="file_cd" />
		<result property="docId" column="docId" />
		<result property="renames" column="renames"/>
		<result property="audience" column="audience"/>
		<result property="confirm" column="confirm"/>
		<result property="refuseRs" column="refuse_rs"/>
		<collection property="performanceVO" resultMap="perFormanceMap"></collection>
		<collection property="movieVideoVO" resultMap="movieVideoMap"></collection>
	</resultMap>

	<resultMap type="com.third.prj.performance.service.PerformanceVO" id="perFormanceMap">
		<result property="name" column="name" />
		<result property="content" column="content" />
		<result property="actor" column="actor" />
		<result property="pNo" column="P_NO"/>
	</resultMap>

	<resultMap type="com.third.prj.movievideo.service.MovieVideoVO" id="movieVideoMap">
		<result property="pVideoNo" column="P_VIDEO_NO"/>
		<result property="vName" column="VNAME"/>
		<result property="vRenames" column="VRENAMES"/>
		<result property="MvNo" column="MV_NO"/>
		<result property="docId" column="DOCID"/>
	</resultMap>
	<!-- 프로시저 -->
	<resultMap type="hashmap" id="procedureCall" />
	
	<!-- 검색프로시저 -->
	<resultMap type="hashmap" id="searchProcedure"/>
	
	<!-- 검색프로시저 -->
	<resultMap type="hashmap" id="InsertMovieHall"/>
	
	

	<select id="mvSelect"
		resultType="com.third.prj.movie.service.MovieVO">
		SELECT 
	    M.MV_NO,M.NAME,M.GENRE,M.STARTDATE,M.DIRECTOR,M.RATING,M.DISTRIBUTOR,M.COUNTRY,M.RUNTIME,M.CONTENT,
	    M.C_ID,M.ACTOR,M.FILE_CD,M.DOCID,M.CONFIRM,M.REFUSE_RS,M.RENAMES,
	    MV.P_VIDEO_NO,MV.VNAME,MV.VRENAMES
	    FROM MOVIE M, MOVIE_VIDEO MV
	    WHERE M.MV_NO = MV.MV_NO
	    AND M.MV_NO=#{mvNo}
	</select>

	<select id="mvListPaging"
		resultType="com.third.prj.movie.service.MovieVO">
	<![CDATA[
		SELECT MV_NO,NAME,GENRE,RATING,DIRECTOR
		FROM 
			(
			SELECT ROWNUM RN,A.* 
			FROM (
			SELECT 
				MV_NO,NAME,GENRE,RATING,DIRECTOR
			FROM
				MOVIE
			WHERE
			]]>
		<if test="searchType == 'ALL'">(NAME LIKE '%'||#{searchName}||'%'
			OR GENRE LIKE '%'||#{searchName}||'%'
			OR RATING LIKE '%'||#{searchName}||'%'
			OR DIRECTOR LIKE '%'||#{searchName}||'%')</if>
		<if test="searchType == 'NAME'">NAME LIKE '%'||#{searchName}||'%'</if>
		<if test="searchType == 'GENRE'">GENRE LIKE '%'||#{searchName}||'%'</if>
		<if test="searchType == 'RATING'">RATING LIKE '%'||#{searchName}||'%'</if>
		<if test="searchType == 'DIRECTOR'">DIRECTOR LIKE '%'||#{searchName}||'%'</if>
		<if test="searchType == null or searchType ==''"> 1 = 1</if>
			<![CDATA[
			ORDER BY MV_NO DESC )A)
			WHERE rn BETWEEN (#{pageNum} -1) *#{amount} AND #{pageNum} * #{amount}
			]]>
	</select>
	<resultMap type="com.third.prj.movie.service.MovieViewVO" id="movieViewMap">
		<result property="mvReservNo" column="MV_RESERV_NO" />
		<result property="name" column="NAME" />
		<result property="payDt" column="PAYDT" />
		<result property="pay" column="PAY" />
		<result property="charge" column="CHARGE" />
		<result property="point" column="POINT" />
		<result property="buyCtntCd" column="BUY_CTNT_CD" />
		<result property="UId" column="U_ID" />
		<result property="tempPoint" column="TEMP_POINT"/>
	</resultMap>


<update id="procedureCall" statementType="CALLABLE">
	{CALL movie_pro(#{vm_vno, mode=IN, jdbcType=INTEGER, javaType=INT},
	                #{mv_name, mode=IN, jdbcType=VARCHAR, javaType=STRING},
	                #{mv_genre, mode=IN, jdbcType=VARCHAR, javaType=STRING},
	                #{mv_director, mode=IN, jdbcType=VARCHAR, javaType=STRING},
	                #{mv_rating, mode=IN, jdbcType=VARCHAR, javaType=STRING},
	                #{mv_country, mode=IN, jdbcType=VARCHAR, javaType=STRING},
	                #{mv_content, mode=IN, jdbcType=VARCHAR, javaType=STRING},
	                #{mv_cid, mode=IN, jdbcType=VARCHAR, javaType=STRING},
	                #{mv_actor, mode=IN, jdbcType=VARCHAR, javaType=STRING},
	                #{mv_fileCd, mode=IN, jdbcType=VARCHAR, javaType=STRING},
	                #{mv_renames, mode=IN, jdbcType=VARCHAR, javaType=STRING},
	                #{mv_vname, mode=IN, jdbcType=VARCHAR, javaType=STRING},
	                #{mv_vrname, mode=IN, jdbcType=VARCHAR, javaType=STRING},
	                #{mv_docId, mode=IN, jdbcType=VARCHAR, javaType=STRING},
	                #{mv_message, mode=OUT, jdbcType=VARCHAR, javaType=STRING})
	</update>
	

	<insert id ="searchProcedure" statementType="CALLABLE"> 
		{CALL popular_search(#{p_search, mode=IN, jdbcType=VARCHAR, javaType=String})}
	</insert>
	
	<insert id ="InsertMovieHall" statementType="CALLABLE">
		{CALL InsertMovieHall(#{d1, mode=IN, jdbcType=VARCHAR, javaType=STRING})}
		
	</insert>
	
	<insert id="popularSearch">
	    INSERT INTO search values(#{searchName}, ((select count(*) from search where keyword = #{searchName}) + 1))
	</insert>

	

	<!-- 영화상영예정작 -->
	<select id="mList" resultMap="movieResultMap">
		<![CDATA[
		SELECT  MV_NO,NAME,GENRE,STARTDATE,DIRECTOR,RATING,DISTRIBUTOR,COUNTRY
		RUNTIME,SUBSTR(CONTENT,0,100) CONTENT,C_ID,ACTOR,FILE_CD,DOCID,RENAMES,AUDIENCE,CONFIRM,REFUSE_RS
		FROM MOVIE
        WHERE STARTDATE BETWEEN TO_CHAR(SYSDATE+1,'yyyyMMdd') 
        AND TO_CHAR(SYSDATE +14,'yyyyMMdd')
        ]]>
	</select>

	<!-- 영화리스트 1-10등까지-->
	<select id="movieList" resultMap="movieResultMap">
		<![CDATA[
   SELECT ROWNUM, A.*
        FROM(
        SELECT NAME,AUDIENCE,STARTDATE,SUBSTR(CONTENT,0,100) CONTENT,FILE_CD,RATING,DOCID,RUNTIME,
        RANK() OVER (ORDER BY AUDIENCE DESC) RANK
        FROM MOVIE
        WHERE
      STARTDATE
      BETWEEN TO_CHAR(SYSDATE-31,'yyyyMMdd')
      AND TO_CHAR(SYSDATE,'yyyyMMdd') ) A
        WHERE ROWNUM BETWEEN 1 AND 10
         ]]>
	</select>
	
	<select id="moviePopChart" resultType="com.third.prj.movie.service.MovieVO">
		<![CDATA[
	 	select NAME,AUDIENCE
		from ( 
		         SELECT NAME,AUDIENCE,ROW_NUMBER() OVER (ORDER BY NVL(AUDIENCE,0)  DESC) ROW_NUM
		         FROM MOVIE)
		where row_num < 11
		]]>
	</select>
	
	<!-- 영화 예약리스트 -->
	<select id="movieReservList" resultMap="movieResultMap">
		<![CDATA[
      SELECT ROWNUM, A.*
        FROM(
        SELECT NAME,AUDIENCE,STARTDATE,SUBSTR(CONTENT,0,100) CONTENT,FILE_CD,RATING,DOCID,RUNTIME,
        RANK() OVER (ORDER BY AUDIENCE DESC) RANK
        FROM MOVIE
        WHERE
      STARTDATE
      BETWEEN TO_CHAR(SYSDATE-31,'yyyyMMdd')
      AND TO_CHAR(SYSDATE,'yyyyMMdd') ) A
         ]]>
	</select>
  
	<!-- 영화상세 -->
	<select id="movieDetail" resultMap="movieResultMap">
		SELECT MV_NO,NAME,GENRE,TO_DATE(STARTDATE,'yyyy.MM.dd') STARTDATE,DIRECTOR,RATING,DISTRIBUTOR,COUNTRY
		RUNTIME,CONTENT,C_ID,ACTOR,FILE_CD,DOCID,RENAMES,AUDIENCE,CONFIRM,REFUSE_RS
		FROM MOVIE
		WHERE
		DOCID = #{docId}
	</select>

	<select id="mvBuyList" resultMap="movieViewMap">
		SELECT *
		FROM MOVIEVIEW
		WHERE
		BUY_CTNT_CD = 'mv'
		AND U_ID = #{UId}

	</select>

	<select id="mvBuyList2" resultMap="movieViewMap">
      	<![CDATA[
			SELECT * 
			FROM (
	    		SELECT ROWNUM RN ,
								A.* 
	    		FROM (  SELECT *
	FROM MOVIEVIEW
	WHERE BUY_CTNT_CD = 'mv'
	AND U_ID = #{UId} ) A ) 	 
         WHERE RN > (#{pageNum}-1) * #{amount}  AND RN <= #{pageNum} * #{amount}
         ORDER BY PAYDT DESC
		]]>
	</select>


	<select id="mvBuyTotal" resultType="int">
		SELECT COUNT(*) AS TOTAL
		FROM
		( SELECT *
		FROM (
		SELECT ROWNUM RN ,
		A.*
		FROM ( SELECT *
		FROM MOVIEVIEW 
		WHERE BUY_CTNT_CD = 'mv'
		AND U_ID = #{UId} ) A ))

	</select>

	<insert id="movieInsert" parameterType="com.third.prj.user.service.UserVO">
 		 <selectKey keyProperty="mvNo" resultType="int" order="BEFORE">
			SELECT NVL(MAX(MV_NO), 0) + 1
			FROM MOVIE
		</selectKey>
		INSERT INTO MOVIE (MV_NO,
							NAME,
							GENRE,
							STARTDATE,
							 DIRECTOR,
							 	RATING,
							DISTRIBUTOR,
							COUNTRY,
							RUNTIME,
							CONTENT,
							C_ID,
							ACTOR,
							FILE_CD,
							DOCID,
							RENAMES) 
					VALUES(#{mvNo},#{name},#{genre},to_char(to_date(#{startDate},'yyyy-mm-dd'),'yyyymmdd'),#{director},#{rating},#{distributor},#{country},#{runtime},#{content},#{CId},#{actor},#{fileCd},#{docId},#{renames})
	</insert>


	<select id="movieSearch" resultMap="movieResultMap" parameterType="String">
		SELECT NAME, ACTOR, CONTENT,FILE_CD,DOCID,RENAMES
		FROM MOVIE
		WHERE NAME LIKE '%'||#{searchName}||'%'
	</select>
	
	<select id="perSearch" resultMap="perFormanceMap" parameterType="String">
		SELECT NAME, ACTOR, CONTENT,FILE_CD,P_NO,RENAMES
		FROM PERFORMANCE
		WHERE NAME LIKE '%'||#{searchName}||'%'
	</select>

	<select id="getTotal" resultType="int">
		SELECT COUNT(*) AS TOTAL
		FROM MOVIE
		WHERE
		<if test="searchType == 'ALL'">NAME LIKE '%'||#{searchName}||'%'
			OR GENRE LIKE '%'||#{searchName}||'%'
			OR RATING LIKE '%'||#{searchName}||'%'
			OR DIRECTOR LIKE '%'||#{searchName}||'%'</if>
		<if test="searchType == 'NAME'">NAME LIKE '%'||#{searchName}||'%'</if>
		<if test="searchType == 'GENRE'">GENRE LIKE '%'||#{searchName}||'%'</if>
		<if test="searchType == 'RATING'">RATING LIKE '%'||#{searchName}||'%'</if>
		<if test="searchType == 'DIRECTOR'">DIRECTOR LIKE '%'||#{searchName}||'%'</if>
		<if test="searchType == null or searchType ==''"> 1 = 1</if>
	</select>

	<!--결제페이지로갈 영화상세 -->
	<select id="mDetail" resultMap="movieResultMap">
		SELECT *
		FROM MOVIE
		WHERE DOCID=#{docId}

	</select>
	<update id="audienceInsert" >
		 UPDATE MOVIE 
		 SET AUDIENCE = (NVL(AUDIENCE,0) + #{audience}) 
		 WHERE DOCID =#{docId}
	</update>
	
	<select id="cMovieList" resultType="com.third.prj.movie.service.MovieVO">
		SELECT *
		FROM MOVIE
		WHERE C_ID = #{CId}
	</select>
	

</mapper>
